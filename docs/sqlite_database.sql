--
-- This is the way DB is organised:
--
DROP TABLE FEED_TB;
DROP TABLE NAPPY_TB;
DROP TABLE NOTE_TB;

CREATE TABLE FEED_TB (
  _ID INTEGER PRIMARY KEY AUTOINCREMENT,
  FEED_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  FEED_AMOUNT INTEGER CONSTRAINT FEED_AMOUNT_CK CHECK (FEED_AMOUNT > 0) NOT NULL
);
CREATE INDEX FEED_TS_IDX ON FEED_TB(FEED_TS);

CREATE TABLE NAPPY_TB (
  _ID INTEGER PRIMARY KEY AUTOINCREMENT,
  NAPPY_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  NAPPY_DIRTY INTEGER (1, 0) NOT NULL
);
CREATE INDEX NAPPY_TS_IDX ON NAPPY_TB(NAPPY_TS);

-- CAN ALSO ADD THIS ONE TO NAPPY_TB;
--  NOTE_ID_FK INTEGER,
--  CONSTRAINT NOTE_ID_FK FOREIGN KEY (NOTE_ID_FK) REFERENCES NOTE_TB(_ID)

CREATE TABLE NOTE_TB (
  _ID INTEGER PRIMARY KEY AUTOINCREMENT,
  NOTE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  NOTE_VALUE VARCHAR2(500) NOT NULL
);
CREATE INDEX NOTE_TS_IDX ON NOTE_TB(NOTE_TS);


INSERT INTO FEED_TB (FEED_TS, FEED_AMOUNT) VALUES (CURRENT_TIMESTAMP, 120);
INSERT INTO NAPPY_TB (NAPPY_TS, NAPPY_DIRTY) VALUES (CURRENT_TIMESTAMP, 1);
INSERT INTO FEED_TB (FEED_TS, FEED_AMOUNT) VALUES (CURRENT_TIMESTAMP, 80);
INSERT INTO NOTE_TB (NOTE_TS, NOTE_VALUE) VALUES (CURRENT_TIMESTAMP, 'B note B');
INSERT INTO FEED_TB (FEED_TS, FEED_AMOUNT) VALUES (CURRENT_TIMESTAMP, 150);
INSERT INTO NAPPY_TB (NAPPY_TS, NAPPY_DIRTY) VALUES (CURRENT_TIMESTAMP, 1);
INSERT INTO NOTE_TB (NOTE_TS, NOTE_VALUE) VALUES (CURRENT_TIMESTAMP, 'A note A');
INSERT INTO NOTE_TB (NOTE_TS, NOTE_VALUE) VALUES (CURRENT_TIMESTAMP, 'C note C');
INSERT INTO NAPPY_TB (NAPPY_TS, NAPPY_DIRTY) VALUES (CURRENT_TIMESTAMP, 0);

CREATE VIEW ENTRIES_V1 AS
  SELECT * FROM
    (SELECT FEED_TS AS TS, _ID AS ID, 'FEED_TB' AS TB FROM FEED_TB
    UNION
    SELECT NAPPY_TS AS TS, _ID AS ID, 'NAPPY_TB' AS TB FROM NAPPY_TB
    UNION
    SELECT NOTE_TS AS TS, _ID AS ID, 'NOTE_TB' AS TB FROM NOTE_TB)
  ORDER BY TS DESC;

CREATE VIEW ENTRIES_ALL_V1 AS
  SELECT * FROM
    (SELECT FEED_TS AS TS,
            _ID AS ID,
            'FEED_TB' AS TB,
            FEED_AMOUNT AS FEED_AMOUNT,
            NULL AS NAPPY_DIRTY,
            NULL AS NOTE_VALUE
         FROM FEED_TB
    UNION
    SELECT NAPPY_TS AS TS,
           _ID AS ID,
           'NAPPY_TB' AS TB,
           NULL AS FEED_AMOUNT,
           NAPPY_DIRTY AS NAPPY_DIRTY,
           NULL AS NOTE_VALUE
         FROM NAPPY_TB
    UNION
    SELECT NOTE_TS AS TS,
           _ID AS ID,
           'NOTE_TB' AS TB,
           NULL AS FEED_AMOUNT,
           NULL AS NAPPY_DIRTY,
           NOTE_VALUE AS NOTE_VALUE
         FROM NOTE_TB)
  ORDER BY TS DESC;
